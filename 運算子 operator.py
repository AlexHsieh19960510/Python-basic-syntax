# 1.賦值運算子
a = "hello"
b = 123
c = [1,2,3]


# 2.算術運算子(1)
# 比較需要注意的是，左邊的變數是右邊運算後的結果，和一般的數學式不太相同。
# 運算子	說明	                  範例	      結果
#   +	    加法	                a = 1+2	    a = 3
#   -	    減法	                a = 20-12	a = 8
#   *	    乘法	                a = 2*3	    a = 6
#   /	    除法	                a = 9/2	    a = 4.5
#   //	除法取整數 ( 無條件捨去 )	 a = 9//2	 a = 4
#   %	    餘數	                a = 9%2	    a = 1
#   **	    次方	                a = 2**3	a = 8


# 3.算術運算子(2)
a = 3 *(3 + 2)
print(a)   # 15


# 4.算術運算子(3)
a = 1       # a 賦值 1
a = a + 1   # a 賦值 1 + 1 ( 此時右邊的 a 等於 1 )
print(a)    # 2

b = 5       # b 賦值 5
b = b - 1   # b 賦值 5 - 1 ( 此時右邊的 b 等於 5 )
print(b)    # 4


# 5.算術運算子(4)
# 如果需要「開根號」，可以使用「＊＊0.5」來實現。
print(4 ** 0.5)   # 2.0


# 6.算術運算子(5)
# 運算子	  範例	      等同於
#   +=	    a += 1	    a = a + 1
#   -=	    a -= 1	    a = a - 1
#   *=	    a *= 2	    a = a * 2
#   /=	    a /= 2	    a = a / 2
#   //=	    a //= 3	    a = a // 3
#   %=	    a %= 3	    a = a % 3
#   **=	    a **= 2	    a = a ** 2


# 7.比較運算子(1)
# 運算的結果只有 True 或是 False 兩種，常用於邏輯判斷使用。
# 注意，因為單一個等號「=」是「賦值運算子」，所以如果要進行相等的比較，必須使用兩個等號「==」。
# 運算子	    說明	                範例
#   >	大於 ( a 是否大於 b )	        a > b
#   <	小於 ( a 是否小於 b )	        a < b
#   >=	大於等於 ( a 是否大於等於 b )	 a >= b
#   <=	小於等於 ( a 是否小於等於 b )	 a <= b
#   ==	等於 ( a 是否等於 b )	        a == b
#   !=	等於 ( a 是否不等於 b )	        a != b


# 8.比較運算子(2)
a = 5
b = 3

print(a < b)   # False
print(b <= a)  # True
print(a != b)  # True
print(a == b)  # False


# 9.邏輯運算子(1)
# 運算的結果只有 True 或是 False 兩種。
# 比較運算子可以使用 & 代替 and，| 代替 or。
# and
# 當 a 是 True，b 也是 True，結果是 True，但只要 a、b 其中一個是 False，結果就是 False。


# 10.邏輯運算子(2)
a = True
b = False
c = True

print(a & b)     # False
print(a and b)   # False
print(a & c)     # True
print(a and c)   # True


# 11.邏輯運算子(3)
# or
# 只要 a、b 其中一個是 True，結果就是 True。


# 12.邏輯運算子(4)
a = True
b = False
c = True

print(a | b)     # True
print(a or b)    # True
print(a | c)     # True
print(a or c)    # True


# 13.邏輯運算子(5)
# not
# 如果 a 為 True，not a 的結果 False，如果 a 為 False，not a 的結果 True。


# 14.邏輯運算子(6)
a = True
b = False

print(not a)   # False
print(not b)   # True


# 15.邏輯運算子(7)
a = 1
b = 2
c = 3

print((a > b) & (c > b))        # False
print((a > b) | (c > b))        # True
print(not ((a > b) & (c > b)))  # True ( 因為 (a>b)&(c>b) 為 True )


# 16.in 與 is 運算子
# 如果判斷包含或相同，回傳 True，否則回傳 False。
a = 2
b = 4
c = [1,2,3]
print(a in c)    # True
print(b in c)    # False

x = [1,2,3]
y = [1,2,3]
z = x
print(x is y)    # False
print(x is z)    # True


# 17.位元運算子(1)
# 「位元運算子」會針對每個數值的「二進位」字元進行位元運算。
# 運算子	                        說明	                                                    範例	                    結果
#   &	    位元 且，二進位數字「完全相同」的部分，不同的部分以 0 取代。	         4&5，使用 0100 和 0101 比較後，回傳 0100	    4
#   ｜	    位元 或，二進位數字「只要有一個為 1 」的部分都為 1。	                4&5，使用 0100 和 0101 比較後，回傳 0101	   5
#   ^	    位元 互斥，二進位數字「完全相同」的部分都為 0，不同的部分以 1 取代。	 4^5，使用 0100 和 0101 比較後，回傳 0001	    1
#   ~	    位元 相反，二進位數字 0 變成 1，1 變成 0	                           ~4，0100 相反為 1011	                        -5
#   >>	    位元 右移，將二進位數字往右移動指定位數，左側補 0	                    4>>2，0100 往右移動兩位 0001	               1
#   <<	    位元 左移，將二進位數字往左移動指定位數，右側補 0	                    5<<2，0101 往左移動兩位 10100	              20


# 18.位元運算子(2)
print(4 & 5)    # 4
print(4 | 5)    # 5
print(4 ^ 5)    # 1
print(~4)     # -5
print(4 >> 2)   # 1
print(5 << 2)   # 20


# 19.跨列運算子
# 如果有遇到「算式過長，需要換行」的程式碼或運算式，除了使用小括號包覆使其換行計算，也能使用「反斜線 \」放在一列的最後方。
a = ( 1 + 2 + 3 +
      4 + 5 + 6 +
      7 + 8 + 9 )

b = 1 + 2 + 3 + \
    4 + 5 + 6 + \
    7 + 8 + 9

